name: terraform ci

on:
  push:
    branches: [ dev, main ]
    paths:
      - 'Terraform/**'
      - '.github/workflows/**'
  workflow_dispatch:

concurrency:
  group: tf-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: ./Terraform

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: gha-terraform

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform fmt (check)
        run: terraform fmt -recursive -check

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan (detailed exit code)
        id: plan
        run: |
          set +e
          terraform plan -lock-timeout=5m -no-color -out=plan.out -detailed-exitcode
          code=$?
          set -e
          echo "code=$code" >> "$GITHUB_OUTPUT"
          terraform show -no-color plan.out | tee plan.txt
        # code meanings: 0=no changes, 2=changes, 1=error (job fails automatically on 1 above)

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.ref_name }}
          path: |
            ./Terraform/plan.out
            ./Terraform/plan.txt

      # Apply only on main and only if there are changes (exit code 2)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && steps.plan.outputs.code == '2'
        run: terraform apply -input=false -auto-approve plan.out

      # TFLint (after plan so it always runs)
      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Run TFLint
        run: tflint || true
